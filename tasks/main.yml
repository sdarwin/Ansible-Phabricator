---
# tasks file for phabricator

# Variables ##########

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}-family.yml"

- name: Include Distribution version specific variables
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"

- name: set facts based on defaults  # noqa var-naming
  set_fact:
    "{{ item[8:] }}": "{{ lookup('vars', item) }}"
  when:
    - item is match("^default_")
    - vars[item[8:]] is not defined
  with_items:
    "{{ vars | list }}"

##########

# stop all services, in case of upgrade

- name: stop phabricator-phd
  service:
    name: phabricator-phd
    state: stopped
  failed_when: false

- name: stop nginx
  service:
    name: nginx
    state: stopped
  failed_when: false

- name: stop php-fpm
  service:
    name: "{{ php_service }}"
    state: stopped
  failed_when: false

- name: fix test-kitchen
  file:
    path: /tmp/kitchen
    state: directory
    recurse: true
    mode: 0775

- name: install repo for php7.3 Ubuntu 16
  apt_repository:
    repo: 'ppa:ondrej/php'
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 15 and ansible_distribution_major_version|int < 18)

- name: Add an Apt signing key, uses whichever key is at the URL
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
    state: present
  when: (ansible_distribution == "Debian" and ansible_distribution_major_version == "9")

- name: install package (Debian 9)
  apt:
    name: "apt-transport-https"
    state: present
    update_cache: true
  when: (ansible_distribution == "Debian" and ansible_distribution_major_version == "9")

# wget -q https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -
# echo "deb https://packages.sury.org/php/ stretch main" | sudo tee /etc/apt/sources.list.d/php.list
- name: install repo for php7.2 Debian 9
  apt_repository:
    repo: "deb https://packages.sury.org/php/ stretch main"
  when: (ansible_distribution == "Debian" and ansible_distribution_major_version == "9")

- name: install packages (Debian)
  apt:
    name: "{{ phabricator_packages }}"
    state: present
    update_cache: true
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 16) or
        (ansible_distribution == "Debian")

- name: install packages (Ubuntu)
  apt:
    name: "{{ phabricator_packages }}"
    state: present
    update_cache: true
    install_recommends: false
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 15 )

- name: install pre-requisite packages 1 (RHEL)
  yum:
    name: "{{ phabricator_pre1_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family == "RedHat"

- name: install pre-requisite packages 2 (RHEL) < 8
  yum:
    name: "{{ phabricator_pre2_packages }}"
    state: present
    update_cache: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int < 8

- name: install pre-requisite packages 2 (RHEL) > 7
  dnf:
    name: "{{ phabricator_pre2_packages }}"
    state: present
    update_cache: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int > 7

# required for libedit-devel package
- name: enable powertools
  changed_when: false
  args:
    warn: false
  shell:
    cmd: dnf config-manager --set-enabled powertools || dnf config-manager --set-enabled PowerTools || true  # noqa 305
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int > 7

- name: enable remi
  command: "sudo yum-config-manager --enable remi-php73"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int < 8

- name: install packages (RHEL)
  yum:
    name: "{{ phabricator_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family == "RedHat"

- name: Install phab python packages
  package:
    name: "{{ phab_python_packages }}"
    state: present

- name: upgrade pip  # noqa 403
  pip:
    name:
      - "{{ phabricator_pip }}"
    state: latest
  changed_when: false

- name: install tools for local mysql
  include: local.yml
  when: database_config.host == "127.0.0.1"

- name: create phabricator users
  user:
    name: "{{ item.value }}"
  with_dict: "{{ users }}"

- name: add www-data to phab-daemon group
  user:
    name: "{{ users.web }}"
    groups: "phab-daemon"
    append: true

- name: config sudoers file vcs
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ users.vcs }}"
    line: "{{ users.vcs }} {{ permissions.vcs }}"
    validate: 'visudo -cf %s'

- name: configure sudoers file www
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ users.web }}"
    line: "{{ users.web }} {{ permissions.web }}"
    validate: 'visudo -cf %s'

- name: dont require tty
  lineinfile:
    dest: /etc/sudoers
    state: absent
    line: "Defaults    requiretty"

- name: create web_root
  file:
    path: "{{ web_root }}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: download phabricator from git repo
  git:
    repo: "{{ item.value }}"
    dest: "{{ web_root }}/{{ item.key }}"
    version: master
    accept_hostkey: true
  with_dict: "{{ repos }}"

- name: enable phabricator in nginx (Debian)
  template:
    src: phabricator.conf.j2
    dest: /etc/nginx/sites-available/phabricator.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: enable website
  file:
    src: /etc/nginx/sites-available/phabricator.conf
    dest: /etc/nginx/sites-enabled/phabricator.conf
    owner: root
    group: root
    state: link
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: enable phabricator in nginx (Redhat)
  template:
    src: phabricator.conf.j2
    dest: /etc/nginx/conf.d/phabricator.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "RedHat"
  notify: restart nginx

- name: create cert (Redhat)
  shell: "{{ make_dummy_cert_path }} {{ phabricator_ssl_cert }} ; chmod 640 {{ phabricator_ssl_cert }} ; chgrp {{ users.web }} {{ phabricator_ssl_cert }}"
  args:
    creates: "{{ phabricator_ssl_cert }}"
  when: ansible_os_family == "RedHat"
  notify: restart nginx

- name: create key (Redhat)
  shell: mkdir -p /etc/ssl/private ; cp -p {{ phabricator_ssl_cert }} {{ phabricator_ssl_key }}  # noqa 302
  args:
    creates: "{{ phabricator_ssl_key }}"
  when: ansible_os_family == "RedHat"  # noqa 302
  notify: restart nginx

- name: enable php-fpm socket
  shell: |
    /bin/sed -i s'/listen = 127.0.0.1:9000/listen = \/var\/run\/php-main.socket/' /etc/php-fpm.d/www.conf ;
    /bin/sed -i s'/;listen.owner = nobody/listen.owner = nginx/' /etc/php-fpm.d/www.conf ;
    /bin/sed -i s'/;listen.group = nobody/listen.group = nginx/' /etc/php-fpm.d/www.conf ;
    /bin/sed -i s'/;listen.mode = 0660/listen.mode = 0660/' /etc/php-fpm.d/www.conf ;
  when: ansible_os_family == "RedHat"  # noqa 303
  # notify: restart php-fpm
  changed_when: false

- name: add php.ini config
  template:
    src: php.ini.j2
    dest: "{{ php_path }}/phabricator.ini"
    owner: root
    group: root
    mode: 0644
  notify: restart php-fpm

- name: Creates mysql_path
  file:
    path: "{{ mysql_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: add mysql.cnf config
  template:
    src: mysql.cnf.j2
    dest: "{{ mysql_path }}/phabricator.cnf"
    owner: root
    group: root
    mode: 0644
  notify: restart mysql

- name: fix my.cnf
  lineinfile:
    path: /etc/my.cnf
    regexp: 'includedir /etc/my.cnf.d'
    insertafter: 'EOF'
    line: '!includedir /etc/my.cnf.d'
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7
  notify: restart mysql

- name: add git binaries to path
  file:
    src: "{{ git_core_path }}/git-http-backend"
    dest: /usr/bin/git-http-backend
    owner: root
    group: root
    state: link
  changed_when: false

- name: include config
  include: config.yml

- name: install pygments for better syntax highlighting
  pip:
    name: pygments
  changed_when: false

- name: Creates repo directory
  file:
    path: "{{ repository_path }}"
    state: directory
    owner: "{{ users.daemon }}"
    group: "{{ users.daemon }}"
    mode: 0755

# - name: start phabricator daemons
#   command: "{{ web_root }}/phabricator/bin/phd restart"
#   sudo_user: "{{ users.daemon }}"
#   changed_when: False

- name: create local file storage
  file:
    path: "{{ phabricator_local_disk_path }}"
    state: directory
    owner: "{{ users.web }}"
    group: "{{ users.web }}"
    mode: 0755
  when: phabricator_file_storage == "local"

- name: add upstart template
  template:
    src: upstart.service.j2
    dest: /etc/init/phabricator-phd.conf
    owner: root
    group: root
    mode: 0644
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15) or
        (ansible_distribution == "Debian" and ansible_distribution_major_version|int < 8)
  notify: restart upstart phabricator-phd

- name: add upstart template Centos6
  template:
    src: upstart.service.centos6.j2
    dest: /etc/init/phabricator-phd.conf
    owner: root
    group: root
    mode: 0644
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7)
  notify: restart upstart phabricator-phd

- name: add systemd template
  template:
    src: systemd.service.j2
    dest: /lib/systemd/system/phabricator-phd.service
    owner: root
    group: root
    mode: 0644
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 14) or
          (ansible_distribution == "Debian" and ansible_distribution_major_version|int > 7) or
          (ansible_os_family == "RedHat" and ansible_distribution_major_version|int > 6)
  notify: restart systemd phabricator-phd

- name: add  preamble.php template
  template:
    src: preamble.php.j2
    dest: "{{ web_root }}/phabricator/support/preamble.php"
    owner: root
    group: root
    mode: 0644

- name: exim internet email
  lineinfile:
    path: "{{ exim_config_file }}"
    regexp: "^dc_eximconfig_configtype='local'"
    line: "dc_eximconfig_configtype='internet'"
    backrefs: true
  when: ansible_os_family == "Debian"
  notify: restart exim

- name: apc config file stat
  lineinfile:
    path: "{{ php_path }}/apc.ini"
    regexp: "^apc.stat"
    line: "apc.stat=Off"
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7)
  notify: restart php-fpm

- name: apc config file slam
  lineinfile:
    path: "{{ php_path }}/apc.ini"
    regexp: "^apc.slam_defense"
    line: "apc.slam_defense=Off"
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int  < 7)
  notify: restart php-fpm

- name: enable services on boot Centos7
  file:
    src: /usr/lib/systemd/system/{{ item }}
    dest: /etc/systemd/system/multi-user.target.wants/{{ item }}
    owner: root
    group: root
    state: link
  with_items:
    - nginx.service
    - php-fpm.service
    - phabricator-phd.service
    - mariadb.service
  when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int  > 6)

- name: enable services on boot Debian
  file:
    src: /lib/systemd/system/{{ item }}
    dest: /etc/systemd/system/multi-user.target.wants/{{ item }}
    owner: root
    group: root
    state: link
  with_items:
    - phabricator-phd.service
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 14) or
          (ansible_distribution == "Debian" and ansible_distribution_major_version|int > 7)

# End Section ##########

# start all services, in case they were stopped during upgrade

- name: notify start nginx
  command: /bin/true
  notify: restart nginx
  changed_when: true

- name: notify start php-fpm
  command: /bin/true
  notify: restart php-fpm
  changed_when: true

- name: notify start upstart phabricator-phd
  command: /bin/true
  notify: restart upstart phabricator-phd
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15) or
        (ansible_distribution == "Debian" and ansible_distribution_major_version|int < 8) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7)

- name: notify start systemd phabricator-phd
  command: /bin/true
  notify: restart systemd phabricator-phd
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 14) or
        (ansible_distribution == "Debian" and ansible_distribution_major_version|int > 7) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version|int > 6)
